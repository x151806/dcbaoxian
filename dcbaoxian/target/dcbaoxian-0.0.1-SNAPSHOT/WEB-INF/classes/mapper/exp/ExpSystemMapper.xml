<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dc.exp.dao.ExpSystemDao">
  	
 	
   	
   <insert id="updateAvatar"
		parameterType="com.dc.exp.entity.ExpSystemUpload">
		insert into system_upload
		(uploadId,disId,site,fileName,createdTime,createdUser) 
		values 
		(#{uploadId},#{disId},#{site},#{fileName},getdate(),#{createdUser})
	</insert>
	
    <insert id="insertSystem" parameterType="com.dc.exp.entity.ExpSystem">
       insert into system_problem 
       (problemId,createdTime,createdUser,type,port,systemRole,menu,status,executor,problem,fixedTime,remarkContent,remarkSatrap) 
       values 
       (#{problemId},getdate(),#{createdUser},#{type},#{port},#{systemRole},#{menu} 
       ,#{status},#{executor},#{problem},#{fixedTime},#{remarkContent},#{remarkSatrap}) 
    </insert>
   
   <insert id="insertProgress" parameterType="com.dc.exp.entity.ExpProgress">
       insert into system_progress 
       (progressId,disId,progress,createdTime,createdUser) 
       values 
       (#{progressId},#{disId},#{progress},getdate(),#{createdUser})
    </insert>
   
   <delete id="deleteSystem"> 
      
      delete from system_problem 
      where problemId in <!-- (1,2,3,4,5) -->
      <foreach collection="ids" 
               open="(" 
               close=")" 
               separator="," 
               item="problemId"> 
            ${problemId} 
      </foreach>
   
   </delete>
   
	  <delete id="deleteUpload">
	      delete from system_upload 
	      where uploadId=#{uploadId}
	  </delete>
   
	  <delete id="deleteUploadByDid">
	      delete from system_upload 
	      where disId=#{disId}
	  </delete>
   
   <update id="updateSystem" 
       parameterType="com.dc.exp.entity.ExpSystem">
         update system_problem
         <set>
             
             <if test="createdTime!=null and createdTime!=''">
                createdTime=#{createdTime},
             </if>
             <if test="createdUser!=null and createdUser!=''">
                createdUser=#{createdUser},
             </if>
             <if test="type!=null and type!=''">
                type=#{type},
             </if>
             <if test="port!=null and port!=''">
                port=#{port},
             </if>
             <if test="systemRole!=null and systemRole!=''">
                systemRole=#{systemRole},
             </if>
             <if test="menu!=null and menu!=''">
                menu=#{menu},
             </if>
             <if test="problem!=null and problem!=''">
                problem=#{problem},
             </if>
             <if test="executor!=null and executor!=''">
                executor=#{executor},
             </if>

             <if test="fixedTime!=null and fixedTime!=''">
                fixedTime=getdate(),
             </if>
             <if test="status!=null and status!=''">
                status=#{status},
             </if>
             <if test="remarkContent!=null and remarkContent!=''">
                remarkContent=#{remarkContent},
             </if>
             <if test="remarkSatrap!=null and remarkSatrap!=''">
                remarkSatrap=#{remarkSatrap},
             </if>
          </set>
        where problemId=#{problemId}
    </update>
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   <select id="findProgressById"
		resultType="com.dc.exp.entity.ExpProgress">
		select * 
		from system_progress 
		where disId=#{disId} 
		order by createdTime asc
	</select>
   
   
   <select id="findUpload"
           resultType="com.dc.exp.entity.ExpSystemUpload">
         select * 
         from system_upload 
         where uploadId=#{uploadId} 
         
   </select>
   <select id="findUploadByDid"
           resultType="com.dc.exp.entity.ExpSystemUpload">
         select * 
         from system_upload 
         where disId=#{disId} 
         
   </select>
   
   <select id="findPageUpload"
           resultType="com.dc.exp.entity.ExpSystemUpload">
         select * 
         from system_upload 
         where disId=#{disId} 
         order by createdTime asc
         
   </select>
   
   <select id="findPageSystem"
           resultType="com.dc.exp.entity.ExpSystem">
           
         select top ${pageSize} * 
         from system_problem 
         where status=1 and problemId not in (select top ${startIndex} problemId from system_problem ORDER BY createdTime desc) 
         order by createdTime asc
         
   </select>
   
   
   <select id="getRowCount" 
           resultType="int">
      
	        select count(*) 
	        from system_problem where status=1 
	        
   </select>
   
   
   
   <select id="findPageAllocating"
           resultType="com.dc.exp.entity.ExpSystem">
           WITH T AS( 
		    SELECT * FROM sys_users WHERE username=#{username} 
		    UNION ALL 
		    SELECT a.*  FROM sys_users a INNER JOIN T ON a.parentId=T.id 
		)
           
         select top ${pageSize} * 
         from system_problem 
         where status in(2,3,4,5,6) and problemId not in (select top ${startIndex} problemId from system_problem ORDER BY createdTime desc) 
	        and 
	     (createdUser in(SELECT username FROM T) 
	     or executor in(SELECT username FROM T)) 
         order by status asc,fixedTime desc
         
   </select>
   
   
   <select id="getAllocatingCount" 
           resultType="int">
        WITH T AS( 
		    SELECT * FROM sys_users WHERE username=#{username} 
		    UNION ALL 
		    SELECT a.*  FROM sys_users a INNER JOIN T ON a.parentId=T.id 
			) 
	        select count(*) 
	        from system_problem where status in(2,3,4,5,6) 
	        and 
	        (createdUser in(SELECT username FROM T) 
		     or executor in(SELECT username FROM T)) 
   </select>
   
   
   <select id="findUserName"
		resultType="com.dc.sys.vo.SysUserDeptVo">
		
		    SELECT u.* FROM sys_users u 
		    left join sys_depts d on d.id=u.deptId 
		    WHERE d.name='ITéƒ¨'
		    
		
	</select>
   
   
   
</mapper>
